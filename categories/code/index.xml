<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Code - Category - K5D::Blog</title>
        <link>https://kienngd.github.io/categories/code/</link>
        <description>Code - Category - K5D::Blog</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>kienngd@gmail.com (Kien Nguyen)</managingEditor>
            <webMaster>kienngd@gmail.com (Kien Nguyen)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Mon, 08 Sep 2025 00:00:00 &#43;0000</lastBuildDate><atom:link href="https://kienngd.github.io/categories/code/" rel="self" type="application/rss+xml" /><item>
    <title>Python Decorators: A Simple Guide</title>
    <link>https://kienngd.github.io/python_decorators_a_simple_guide/</link>
    <pubDate>Mon, 08 Sep 2025 00:00:00 &#43;0000</pubDate><author>
        <name>Kien Nguyen</name>
    </author><guid>https://kienngd.github.io/python_decorators_a_simple_guide/</guid>
    <description><![CDATA[<h1 id="python-decorators-a-simple-guide" class="headerLink">
    <a href="#python-decorators-a-simple-guide" class="header-mark"></a>Python Decorators: A Simple Guide</h1><h2 id="what-is-a-decorator" class="headerLink">
    <a href="#what-is-a-decorator" class="header-mark"></a>1 What is a Decorator?</h2><p>A decorator in Python is a function that modifies the behavior of another function. It adds extra functionality without changing the original function code.</p>
<h2 id="why-use-decorators" class="headerLink">
    <a href="#why-use-decorators" class="header-mark"></a>2 Why Use Decorators?</h2><p>Decorators help you:</p>
<ul>
<li>Reuse code</li>
<li>Keep functions clean</li>
<li>Add logging, timing, or access control</li>
<li>Make your code more readable</li>
</ul>]]></description>
</item><item>
    <title>How to Properly Catch and Raise Exceptions</title>
    <link>https://kienngd.github.io/process-exceptions/</link>
    <pubDate>Sun, 24 Aug 2025 00:00:00 &#43;0000</pubDate><author>
        <name>Kien Nguyen</name>
    </author><guid>https://kienngd.github.io/process-exceptions/</guid>
    <description><![CDATA[üêç How to Properly Catch and Raise Exceptions ‚Äì A Guide for Junior Developers(This article was created by Qwen AI)
Handling exceptions correctly isn&rsquo;t just about preventing crashes ‚Äî it makes your code more stable, easier to debug, and simpler to maintain. Here are simple, practical rules every junior developer should follow.
1 ‚úÖ Only catch an exception when you know what to do ‚ùå Don&rsquo;t catch an exception just &ldquo;because you can&rdquo;.]]></description>
</item><item>
    <title>Parallel Processing In Python3</title>
    <link>https://kienngd.github.io/parallel_processing_in_python3/</link>
    <pubDate>Fri, 28 Feb 2025 00:00:00 &#43;0000</pubDate><author>
        <name>Kien Nguyen</name>
    </author><guid>https://kienngd.github.io/parallel_processing_in_python3/</guid>
    <description><![CDATA[<h2 id="-why-use-parallel-processing" class="headerLink">
    <a href="#-why-use-parallel-processing" class="header-mark"></a>1 ü§î Why Use Parallel Processing?</h2><p>When running üêç Python programs, some tasks take a long ‚è≥ time to complete. For example, calling an external üåê API or reading large üìÇ files. If we run these tasks one by one, it can be üêå slow. Instead, we can run them in parallel to save ‚è±Ô∏è time.</p>]]></description>
</item><item>
    <title>Python&#39;s **kwargs: What is it?</title>
    <link>https://kienngd.github.io/python-kwargs-what-is-it/</link>
    <pubDate>Tue, 11 Feb 2025 00:00:00 &#43;0000</pubDate><author>
        <name>Kien Nguyen</name>
    </author><guid>https://kienngd.github.io/python-kwargs-what-is-it/</guid>
    <description><![CDATA[<h2 id="pythons-kwargs-what-is-it" class="headerLink">
    <a href="#pythons-kwargs-what-is-it" class="header-mark"></a>1 Python&rsquo;s <code>**kwargs</code>: What is it?</h2><p>In Python, <code>**kwargs</code> is a special syntax that allows you to pass a variable number of keyword arguments to a function.</p>]]></description>
</item><item>
    <title>Virtual environment in Python 3</title>
    <link>https://kienngd.github.io/virtual-environment-in-python-3/</link>
    <pubDate>Tue, 11 Feb 2025 00:00:00 &#43;0000</pubDate><author>
        <name>Kien Nguyen</name>
    </author><guid>https://kienngd.github.io/virtual-environment-in-python-3/</guid>
    <description><![CDATA[<h2 id="what-is-a-virtual-environment" class="headerLink">
    <a href="#what-is-a-virtual-environment" class="header-mark"></a>1 What is a virtual environment?</h2><p>A virtual environment is a separate Python environment. It is isolated from your system&rsquo;s Python environment. It lets you install Python packages and libraries. These packages don&rsquo;t affect other projects or your system&rsquo;s Python.</p>]]></description>
</item><item>
    <title>Use PHPStan to Ensure Code Quality in Your Project</title>
    <link>https://kienngd.github.io/use-phpstan-to-ensure-code-quality-in-your-project/</link>
    <pubDate>Fri, 04 Oct 2024 00:00:00 &#43;0000</pubDate><author>
        <name>Kien Nguyen</name>
    </author><guid>https://kienngd.github.io/use-phpstan-to-ensure-code-quality-in-your-project/</guid>
    <description><![CDATA[<p><figure><img
        
        loading="lazy"
        src="/use-phpstan-to-ensure-code-quality-in-your-project/phpstan-banner_hu3be14738fab87c5f9e16196a9383de75_8018_1200x0_resize_q75_h2_lanczos_3.webp"
        srcset="/use-phpstan-to-ensure-code-quality-in-your-project/phpstan-banner_hu3be14738fab87c5f9e16196a9383de75_8018_700x0_resize_q75_h2_lanczos_3.webp 700w,
            /use-phpstan-to-ensure-code-quality-in-your-project/phpstan-banner_hu3be14738fab87c5f9e16196a9383de75_8018_1200x0_resize_q75_h2_lanczos_3.webp 1200w,
            /use-phpstan-to-ensure-code-quality-in-your-project/phpstan-banner_hu3be14738fab87c5f9e16196a9383de75_8018_2000x0_resize_q75_h2_lanczos_3.webp 2000w"
        title="PHPStan A Testing Tool" height="413"   width="1200" ><figcaption class="image-caption">PHPStan A Testing Tool</figcaption>
    </figure></p>
<h2 id="introduction" class="headerLink">
    <a href="#introduction" class="header-mark"></a>1 <strong>Introduction</strong></h2><p><strong>PHPStan</strong> is a powerful static analysis tool for PHP that checks your code for potential errors without executing it. By using <strong>PHPStan</strong>, you can catch bugs early in the development process, improve the overall <strong>quality</strong> of your code, and ensure your project is more <strong>stable</strong> and <strong>maintainable</strong>.</p>]]></description>
</item><item>
    <title>Introduction to PHPDocumentor</title>
    <link>https://kienngd.github.io/introduction-to-phpdocumentor/</link>
    <pubDate>Wed, 25 Sep 2024 00:00:00 &#43;0000</pubDate><author>
        <name>Kien Nguyen</name>
    </author><guid>https://kienngd.github.io/introduction-to-phpdocumentor/</guid>
    <description><![CDATA[<p><figure><img
        
        loading="lazy"
        src="/introduction-to-phpdocumentor/phpdocumentor_huc2fa6143d84be30945f5f94583653544_82428_1200x0_resize_q75_h2_lanczos_3.webp"
        srcset="/introduction-to-phpdocumentor/phpdocumentor_huc2fa6143d84be30945f5f94583653544_82428_700x0_resize_q75_h2_lanczos_3.webp 700w,
            /introduction-to-phpdocumentor/phpdocumentor_huc2fa6143d84be30945f5f94583653544_82428_1200x0_resize_q75_h2_lanczos_3.webp 1200w,
            /introduction-to-phpdocumentor/phpdocumentor_huc2fa6143d84be30945f5f94583653544_82428_2000x0_resize_q75_h2_lanczos_3.webp 2000w"
        title="PHPDocumentor" height="304"   width="1200" ><figcaption class="image-caption">PHPDocumentor</figcaption>
    </figure></p>
<p><code>PHPDocumentor</code> is a tool that helps generate <code>technical documentation</code> for <code>PHP projects</code>. It reads your PHP code and creates detailed documentation for <code>functions</code>, <code>classes</code>, and <code>methods</code>&hellip; This is useful for both new developers and teams working together.</p>
<h2 id="why-use-phpdocumentor" class="headerLink">
    <a href="#why-use-phpdocumentor" class="header-mark"></a>1 Why Use PHPDocumentor?</h2><p>Using PHPDocumentor makes it easier to understand and maintain your code. It helps others quickly see how to use your functions and classes. Good documentation can save time and reduce mistakes. Also, it improves the quality of your project by keeping everything organized.</p>]]></description>
</item><item>
    <title>Pipeline-partten in Laravel</title>
    <link>https://kienngd.github.io/pipeline-partern-in-laravel/</link>
    <pubDate>Mon, 26 Aug 2024 00:00:00 &#43;0000</pubDate><author>
        <name>Kien Nguyen</name>
    </author><guid>https://kienngd.github.io/pipeline-partern-in-laravel/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/pipeline-partern-in-laravel/pipeline-diagram.webp" referrerpolicy="no-referrer">
            </div><p>In Laravel, the <strong>pipeline pattern</strong> helps you process a series of tasks in a clear and organized way. Instead of handling each step separately, you can use a pipeline to apply multiple actions in sequence.</p>
<p>This pattern is useful when you need to apply several steps to data or an object. For example, you can use a pipeline to handle an order request with steps like validation, and adding data to the order and finally save it to database.</p>]]></description>
</item><item>
    <title>Inheritance in GoLang</title>
    <link>https://kienngd.github.io/inheritance_in_golang.md/</link>
    <pubDate>Wed, 26 Jun 2024 00:00:00 &#43;0000</pubDate><author>
        <name>Kien Nguyen</name>
    </author><guid>https://kienngd.github.io/inheritance_in_golang.md/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/inheritance_in_golang.md/inheritance.png" referrerpolicy="no-referrer">
            </div><p><strong>Inheritance</strong> is an important concept in OOP (Object-Oriented Programming). Since Golang does not support classes, there is <strong>no inheritance concept in GoLang</strong>. However, you can implement inheritance through <strong>struct embedding</strong>.</p>]]></description>
</item><item>
    <title>Functional options pattern with example</title>
    <link>https://kienngd.github.io/functional-options-pattern/</link>
    <pubDate>Tue, 25 Jun 2024 00:00:00 &#43;0000</pubDate><author>
        <name>Kien Nguyen</name>
    </author><guid>https://kienngd.github.io/functional-options-pattern/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/functional-options-pattern/functional-options-social.png" referrerpolicy="no-referrer">
            </div><h2 id="what-is-the-functional-options-pattern" class="headerLink">
    <a href="#what-is-the-functional-options-pattern" class="header-mark"></a>1 What is the Functional Options Pattern?</h2><p>The Functional Options Pattern is a design pattern used in programming. It helps to set up options for a function or object in a flexible and clear way. Instead of having many parameters in a function, you use options to configure it.</p>]]></description>
</item></channel>
</rss>
